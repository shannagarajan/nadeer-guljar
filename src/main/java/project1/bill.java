/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * bill.java
 *
 * Created on 7 Jul, 2013, 4:23:49 PM
 */
package project1;

import java.text.SimpleDateFormat;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sony
 */
public class bill extends JInternalFrame implements Printable {

    double total = 0, sum;

    /** Creates new form bill */
    public bill() {
        initComponents();

        java.util.Date obj = new java.util.Date();
        jLabel9.setText(new SimpleDateFormat("dd-MM-yyyy").format(obj));


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        namebox1 = new JLabel();
        jComboBox1 = new JComboBox();
        jLabel2 = new JLabel();
        jComboBox2 = new JComboBox();
        quantitybox1 = new JLabel();
        jLabel3 = new JLabel();
        amountbox = new JTextField();
        quan = new JTextField();
        jButton2 = new JButton();
        tb = new JTextField();
        jLabel1 = new JLabel();
        jButton3 = new JButton();
        jLabel4 = new JLabel();
        quanbox = new JTextField();
        bil = new JTextField();
        jLabel5 = new JLabel();
        jScrollPane1 = new JScrollPane();
        jTable1 = new JTable();
        jButton4 = new JButton();
        jLabel6 = new JLabel();
        bn = new JTextField();
        jLabel7 = new JLabel();
        jButton5 = new JButton();
        jButton6 = new JButton();
        jLabel8 = new JLabel();
        jLabel9 = new JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Calculate Bill");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        namebox1.setText("Categary");
        getContentPane().add(namebox1);
        namebox1.setBounds(190, 10, 90, 30);

        jComboBox1.setModel(new DefaultComboBoxModel(new String[] { "Select Categary" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(310, 10, 280, 30);

        jLabel2.setText("Clothing Style");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(190, 50, 110, 40);

        jComboBox2.setModel(new DefaultComboBoxModel(new String[] { "Select Style" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(310, 50, 280, 30);

        quantitybox1.setText("Quantity to sell");
        getContentPane().add(quantitybox1);
        quantitybox1.setBounds(190, 120, 120, 30);

        jLabel3.setText("Price Per Item");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(600, 50, 90, 30);

        amountbox.setEditable(false);
        getContentPane().add(amountbox);
        amountbox.setBounds(730, 50, 170, 30);
        getContentPane().add(quan);
        quan.setBounds(310, 120, 170, 30);

        jButton2.setText("Calculate Total");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(510, 120, 170, 30);

        tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbActionPerformed(evt);
            }
        });
        getContentPane().add(tb);
        tb.setBounds(310, 170, 170, 30);

        jLabel1.setText("Total Price");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(200, 170, 110, 30);

        jButton3.setText("Add To Bill");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(510, 170, 170, 30);

        jLabel4.setText("Total Quantity In Stock");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(600, 10, 150, 30);

        quanbox.setEditable(false);
        getContentPane().add(quanbox);
        quanbox.setBounds(730, 10, 170, 30);
        getContentPane().add(bil);
        bil.setBounds(700, 490, 150, 30);

        jLabel5.setText("Total Bill");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(610, 490, 80, 30);

        jTable1.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Category", "Clothing Style", "In Stock", "Price Per item", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 210, 820, 270);

        jButton4.setText("Save Bill");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(190, 510, 120, 40);

        jLabel6.setText("Bill No");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(70, 20, 70, 20);
        getContentPane().add(bn);
        bn.setBounds(40, 50, 90, 30);
        getContentPane().add(jLabel7);
        jLabel7.setBounds(590, 30, 260, 0);

        jButton5.setText("Print Bill");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(40, 510, 140, 40);

        jButton6.setText("Remove Item");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(690, 170, 210, 30);

        jLabel8.setText("Date");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(70, 110, 40, 20);

        jLabel9.setBorder(BorderFactory.createEtchedBorder());
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 130, 90, 30);

        setBounds(0, 0, 931, 610);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        String path = "jdbc:mysql://localhost:3306/";
        String place = "project1";

        if (jComboBox1.getSelectedIndex() != 0) {
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myconnection = DriverManager.getConnection(path + place, "root", "");
                try {
                    String q = "select producttype from addstock where comapnyname=?";
                    PreparedStatement mystatement = myconnection.prepareStatement(q);
                    mystatement.setString(1, jComboBox1.getSelectedItem().toString());


                    ResultSet myresult = mystatement.executeQuery();
                    jComboBox2.removeAllItems();
                    if (myresult.next()) {
                        jComboBox2.addItem("Choose product");
                        do {
                            jComboBox2.addItem(myresult.getString("producttype"));
                        } while (myresult.next());
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "no producttype found");
                    }


                    mystatement.close();
                    myconnection.close();
                } catch (Exception e) {
                    //System.out.println("Error in query"+e.getMessage());
                    JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
                }
            } catch (Exception e) {
                //System.out.println("Error on connnection"+e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
            }
        }
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed




        if (jComboBox2.getSelectedIndex() > 0) {
            String path = "jdbc:mysql://localhost:3306/";
            String place = "project1";
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection myconnection = DriverManager.getConnection(path + place, "root", "");
                try {
                    String q = "select * from newstock1 where namebox=? and stocknamebox=?";
                    PreparedStatement mystatement = myconnection.prepareStatement(q);
                    mystatement.setString(1, jComboBox1.getSelectedItem().toString());
                    mystatement.setString(2, jComboBox2.getSelectedItem().toString());


                    ResultSet myresult = mystatement.executeQuery();

                    if (myresult.next()) {
                        amountbox.setText(myresult.getString("amountbox"));
                        quanbox.setText(myresult.getString("quantitybox"));
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "not available in stock");
                    }


                    mystatement.close();
                    myconnection.close();
                } catch (Exception e) {
                    //System.out.println("Error in query"+e.getMessage());
                    JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
                }
            } catch (Exception e) {
                //System.out.println("Error on connnection"+e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
            }


        }


        // TODO add your handling code here:
}//GEN-LAST:event_jComboBox2ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated


        String path = "jdbc:mysql://localhost:3306/";
        String place = "project1";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            try {
                String q = "select * from addcomp";
                PreparedStatement mystatement = myconnection.prepareStatement(q);



                ResultSet myresult = mystatement.executeQuery();

                if (myresult.next()) {
                    do {
                        jComboBox1.addItem(myresult.getString("comapnyname"));
                    } while (myresult.next());

                } else {
                    jComboBox1.addItem("No product added yet");
                }


                mystatement.close();
                myconnection.close();
            } catch (Exception e) {
                //System.out.println("Error in query"+e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
            }
        } catch (Exception e) {
            //System.out.println("Error on connnection"+e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
        }
        empo1();

    }//GEN-LAST:event_formInternalFrameActivated

         private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

             if (quan.getText().length() > 0) {
                 double amount = (Double.parseDouble(amountbox.getText()));

                 double tq = (Double.parseDouble(quanbox.getText()));

                 double quantity = (Double.parseDouble(quan.getText()));
                 if (quantity <= tq) {
                     sum = (amount * quantity);
                     tb.setText(String.valueOf(sum));

                 } else {
                     JOptionPane.showMessageDialog(rootPane, "entered quantity more than available in stock");
                 }
             } else {
                 JOptionPane.showMessageDialog(rootPane, "Enter quantity!!!");

             }
         }//GEN-LAST:event_jButton2ActionPerformed

         private void tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbActionPerformed
             // TODO add your handling code here:
         }//GEN-LAST:event_tbActionPerformed

         private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

             total = total + sum;

             bil.setText(String.valueOf(total));

             if (tb.getText().length() > 0) {
                 DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
                 tbl.addRow(new Object[]{jComboBox1.getSelectedItem().toString(), jComboBox2.getSelectedItem().toString(), quanbox.getText(), amountbox.getText(), quan.getText(), tb.getText()});

                 amountbox.setText(null);
                 quan.setText(null);
                 quanbox.setText(null);
                 tb.setText(null);

                 jComboBox2.setSelectedIndex(0);
             } else {
                 JOptionPane.showMessageDialog(rootPane, "Calculate Total first");

             }

         }//GEN-LAST:event_jButton3ActionPerformed

    void empo1() {
        String path = "jdbc:mysql://localhost:3306/";
        String place = "project1";
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection myconnection = DriverManager.getConnection(path + place, "root", "");
            try {
                String q = "select max(bill_id) from billing";
                PreparedStatement mystatement = myconnection.prepareStatement(q);


                ResultSet myresult = mystatement.executeQuery();

                if (myresult.next()) {
                    int oldid = Integer.parseInt(myresult.getString(1));
                    int newid = oldid + 1;
                    bn.setText(String.valueOf(newid));
                }
            } catch (Exception e) {
                //System.out.println("Error in query"+e.getMessage());
                JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
            }
        } catch (Exception e) {
            //System.out.println("Error on connnection"+e.getMessage());
            JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());
        }
    }

         private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
             String c = "", p = "", price = "", qu = "";

             int r = jTable1.getRowCount();
             double cq = 0, sq = 0;

             String path = "jdbc:mysql://localhost:3306/";
             String place = "project1";

             try {
                 Class.forName("com.mysql.jdbc.Driver");
                 Connection myconnection = DriverManager.getConnection(path + place, "root", "");
                 try {


                     for (int i = 0; i < r; i++) {
                         c += jTable1.getValueAt(i, 0).toString() + ",";
                         p += jTable1.getValueAt(i, 1).toString() + ",";
                         price += jTable1.getValueAt(i, 3).toString() + ",";
                         qu += jTable1.getValueAt(i, 4).toString() + ",";
                         cq = Double.parseDouble(jTable1.getValueAt(i, 2).toString());
                         sq = Double.parseDouble(jTable1.getValueAt(i, 4).toString());
                         try {
                             String q = "update newstock1 set quantitybox=? where namebox=? and stocknamebox=?";
                             PreparedStatement mystatement = myconnection.prepareStatement(q);
                             mystatement.setString(1, (cq - sq) + "");
                             mystatement.setString(2, jTable1.getValueAt(i, 0).toString());
                             mystatement.setString(3, jTable1.getValueAt(i, 1).toString());
                             mystatement.executeUpdate();
                             mystatement.close();
                         } catch (Exception e) {
                             JOptionPane.showMessageDialog(rootPane, "Error in updating stock : " + e.getMessage());
                         }

                     }


                     String q = "insert into billing values(?,?,?,?,?,?,?)";
                     PreparedStatement mystatement = myconnection.prepareStatement(q);
                     mystatement.setString(1, bn.getText());
                     mystatement.setString(2, c);
                     mystatement.setString(3, p);
                     mystatement.setString(4, price);
                     mystatement.setString(5, qu);
                     mystatement.setString(6, bil.getText());

                     java.util.Date obj = new java.util.Date();
                     SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                     String dateofreg = myformat.format(obj);
                     mystatement.setString(7, dateofreg);

                     mystatement.execute();
                     JOptionPane.showMessageDialog(rootPane, "saved successfully");
                     mystatement.close();
                     myconnection.close();
                 } catch (Exception e) {
                     JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                 }
             } catch (Exception e) {
                 JOptionPane.showMessageDialog(rootPane, "Error in query" + e.getMessage());

             }
             bil.setText(null);
             empo1();
             DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
             tbl.setRowCount(0);

         }//GEN-LAST:event_jButton4ActionPerformed

         private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

             try {

                 DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
                 tbl.addRow(new Object[]{"", "", "", "", "", ""});

                 tbl.addRow(new Object[]{"Total : ", "", "", "", "", bil.getText()});

                 MessageFormat headerFormat = new MessageFormat("Bill "+bn.getText());
                 MessageFormat footerFormat = new MessageFormat("- {0} -");
                 jTable1.print(JTable.PrintMode.FIT_WIDTH, headerFormat, footerFormat);
                 tbl.removeRow(tbl.getRowCount() - 1);
                 tbl.removeRow(tbl.getRowCount() - 1);

             } catch (Exception pe) {
                 System.err.println("Error printing: " + pe.getMessage());
             }

         }//GEN-LAST:event_jButton5ActionPerformed

         private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
             int myrow = jTable1.getSelectedRow();
             if (myrow > 0) {

                 double q1 = Double.parseDouble(jTable1.getValueAt(myrow, 5).toString());
                 double q2 = Double.parseDouble(bil.getText());
                 bil.setText((q2 - q1) + "");

                 DefaultTableModel tbl = (DefaultTableModel) jTable1.getModel();
                 tbl.removeRow(myrow);

             } else {
                 JOptionPane.showMessageDialog(rootPane, "Please select a item from table ");
             }

         }//GEN-LAST:event_jButton6ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JTextField amountbox;
    private JTextField bil;
    private JTextField bn;
    private JButton jButton2;
    private JButton jButton3;
    private JButton jButton4;
    private JButton jButton5;
    private JButton jButton6;
    private JComboBox jComboBox1;
    private JComboBox jComboBox2;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JLabel jLabel9;
    private JScrollPane jScrollPane1;
    private JTable jTable1;
    private JLabel namebox1;
    private JTextField quan;
    private JTextField quanbox;
    private JLabel quantitybox1;
    private JTextField tb;
    // End of variables declaration//GEN-END:variables

    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        if (pageIndex > 0) {
            return NO_SUCH_PAGE;
        }


        Graphics2D g2d = (Graphics2D) graphics;
        g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());


        this.paint(g2d);
        this.repaint();

        return PAGE_EXISTS;


    }
}
